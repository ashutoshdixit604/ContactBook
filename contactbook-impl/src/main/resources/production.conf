cassandra.default {
  contact-points = ["localhost"]
  port = 9042
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  # See http://doc.akka.io/docs/akka/snapshot/general/configuration.html#config-akka-remote
  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = 127.0.1.1
      port = 2652
    }
  }

  cluster {
    # Configuration of seed nodes. Note that this must match the akka.remote.netty settings EXACTLY for the node
    # to join with or it won't work correctly.
    seed-nodes = ["akka.tcp://application@127.0.1.1:2652"]
  }

  discovery {
    method = aggregate
    aggregate {
      discovery-methods = ["config", "akka-dns"]
    }
  }
}

lagom {
  discovery {
    consul {
      agent-hostname = "127.0.0.1"   # hostname or IP-address for the Consul agent
      agent-port = 8500          # port for the Consul agent
      uri-scheme = "http"        # for example: http or https
      routing-policy = "round-robin" # valid routing policies: first, random, round-robin
    }
  }
}

pidfile.path = /var/run/bankiq/cognitive-ods-impl.pid

ods.port = 59155
ods.serviceId = "cognitive-ods-service-01"